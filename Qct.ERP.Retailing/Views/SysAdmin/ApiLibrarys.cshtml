@{
    ViewBag.Title = ConstPool.Page_Title;
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增支付接口", editText: "修改支付接口"));
}

@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <span>支付类型：</span>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("ApiType", ViewBag.apiTypes as IList<SelectListItem>, new { @class="easyui-combobox",style="width:150px"})
            </td>
            <td class="label-toolbar">
                <label>状态：</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("State", ViewBag.states as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "editable:false" })
            </td>
            <td class="label-toolbar">
                <label>关键词：</label>
            </td>
            <td class="input-toolbar">
                <input id="keyword" name="keyword" class="datacontrol easyui-textbox" placeholder="编码/名称" data-options="prompt:'编码/名称'" />
            </td>
        </tr>
    </table>
}
@section toolbar
{
    <a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-usable'" onclick="setState(1)">设为可用</a>
    <a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-suspend'" onclick="setState(0)">设为停用</a>
}
<script type="text/javascript">
    pharos.manager.geturl = "@Url.Action("ApiLibraryPageList")";
    pharos.manager.editurl = "@Url.Action("ApiLibrarySave")";
    pharos.manager.delurl = "@Url.Action("ApiLibraryDelete")";
    pharos.manager.sortName = "ApiOrder";
    pharos.manager.sortOrder = "asc";
    pharos.manager.columns = [[
        { field: 'Id', checkbox: true },
        { field: 'ApiCode', title: '标识', width: 120 },
        { field: 'Title', title: '接口名称', width: 120 },
        { field: 'ApiTypeTitle', title: '支付类型', width: 120 },
        { field: 'ApiUrl', title: '接口地址', width: 200 },
        { field: 'State', title: '状态', width: 120, formatter: function (value, row, index) { return value == 0 ? "禁用" : "启用"; } },
        { field: 'ApiOrder', title: '排序', width: 200 },
        {
            field: 'opert', title: '操作', width: 100, formatter: function (value, row, index) {
                return "<a  href='javascript:moveItem(1,\"" + row.Id + "\")'>[上移]</a>&nbsp;&nbsp;&nbsp;<a  href='javascript:moveItem(2,\"" + row.Id + "\")'>[下移]</a>&nbsp;&nbsp;&nbsp;";
            }
        }
    ]];

    pharos.manager.addItem = function () {
        this.Id = "";
        openDialog800(this.addText, this.editurlNocache());
    }
    pharos.manager.editItem = function (id) {
        this.Id = id;
        openDialog800(this.editText, this.editurlNocache());
    }
    function editBefore(rowData, field, index, value) {
        if (field == "opert") return false;
        return true;
    }
    function moveItem(mode, id) {
        $.ajax({
            type: 'post',
            data: { mode: mode, id: id },
            url: "@Url.Action("moveItem")",
            success: function (data) {
                pharos.manager.gridReload();
            }, error: function (data) {
                $.messager.alert("提示", "移动失败！", "info");
            }
        })
    }

    function setState(state) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("ApiLibraryState")", { Ids: ids, t: Math.random(), state: state }, function (d) {
            if (d.successed) {
                $.messager.alert("提示", "操作成功！", "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "操作失败！" + d.message, "error");
            }
        }, "json");
    }
</script>