@{
    var activityNoticeList = ViewBag.activityNoticeList as List<ActivityNoticeModel>;//活动公告
    var orderList = ViewBag.OrderList as List<IndentOrderModel>;//采购订单
    var hotProductNameListNotJson = ViewBag.hotProductNameListNotJson as List<string>;//热卖产品名称列表
    if (hotProductNameListNotJson == null)
    {
        hotProductNameListNotJson = new List<string>();
    }
}
<style>
   .notice .a_hint{color:#797979;}
</style>

<div class="box">
    <p style="color: #bfbfbf; font-size: 1.25em; margin-left:0.5%; font-weight: 500; line-height: 40px;">近3天数据</p>
    <div class="top">
        <div class="top-1 top-2" style="margin-left:0;">
            <div class="left"></div>
            <div class="right">
                <p class="num font-size-30 font-color-top">@ViewBag.newMemberNumber</p>
                <p class="name font-size-12 font-color-top">新增会员</p>
            </div>
        </div>
        <div class="top-1">
            <div class="left left-2">
            </div>
            <div class="right">
                <p class="num font-size-30 font-color-top">@ViewBag.newSalesVolume</p>
                <p class="name font-size-12 font-color-top">新增销售量</p>
            </div>
        </div>
        <div class="top-1">
            <div class="left left-3">
            </div>
            <div class="right">
                <p class="num font-size-30 font-color-top">@ViewBag.newSaleOrderNumber</p>
                <p class="name font-size-12 font-color-top">新增客单量</p>
            </div>
        </div>
        <div class="top-1 top-3">
            <div class="left left-4 left-1">
            </div>
            <div class="right right-1">
                <p class="num font-size-30 font-color-top">@(((decimal)ViewBag.newSaleTotal).ToString("N2"))</p>
                <p class="name font-size-12 font-color-top">新增销售额</p>
            </div>
        </div>
    </div>
    <div class="report">
        <div id="chart1" class="bar-1"></div>
        <div class="report-r">
            <span id="chart2" class="line"></span>
            @if (hotProductNameListNotJson.Count > 0)
            { 
            <span id="chart3" class="bar-2"></span>
            }
            else
            {
             <span style="text-align:center;margin-top:75px;" class="bar-2">暂无数据</span>
            }
        </div>
    </div>
    <table class="notice">
        <tr><td class="td-1 font-size-14 font-color-blue" colspan="3">活动公告</td></tr>
            @foreach (var activityNotice in activityNoticeList)
            {
                <tr style="cursor:pointer" onclick="toActivityNoticeDetail('@activityNotice.Id', '@activityNotice.Type', '@activityNotice.Title')">
                    <td class="td-2 td-9 font-size-12 font-color-gray">@activityNotice.Title</td>
                    <td class="td-2 td-10 font-size-12 font-color-gray">@activityNotice.TimeStr</td>
                    <td class="td-2 td-4">
                        <span class="green @(activityNotice.StateStr == "未开始" ? "red" : "")@(activityNotice.StateStr == "已发布" ? "blue" : "") @(activityNotice.StateStr == "已过期" ? "gray" : "") font-size-10 font-color-white">@activityNotice.StateStr</span>
                    </td>
                </tr>
            }
    </table>
    <table class="notice" style="margin-left:2%;">
        <tr><td class="td-1 font-size-14 font-color-blue" colspan="5">采购订单</td></tr>
        @for (var i = 1; i <= orderList.Count; i++)
        {
            var order = orderList[i - 1];
            var orderGiftnumArr = order.OrderGiftnum.Split('/');
            <tr style="cursor:pointer" onclick="toOrderDetail(@order.Id)">
                <td class="td-2 td-5 font-size-12 font-color-gray">@order.IndentOrderId</td>
                <td class="td-2 td-8 font-size-12 font-color-gray">
                    <a href="javascript:void(0);" title="订单数" class="a_hint">@(orderGiftnumArr[0] == null ? "" : orderGiftnumArr[0])</a>/
                    <a href="javascript:void(0);" title="赠品数" class="a_hint">@(orderGiftnumArr[1] == null ? "" : orderGiftnumArr[1])</a>
                </td>
                <td class="td-2 td-6 font-size-12 font-color-gray">@order.StoreTitle</td>
                <td class="td-2 td-7 font-size-12 font-color-gray">@order.OrderTotal.ToString("C")</td>
                <td class="td-2 td-4">
                    <span class="green  @(order.StateTitle=="已中止" ? "gray" : "")@(order.StateTitle=="未提交" ? "gray" : "")@(order.StateTitle== "未审核" ? "red" : "")@(order.StateTitle== "未配送" ? "red" : "")@(order.StateTitle== "已收货" ? "blue" : "") font-size-10 font-color-white">@order.StateTitle</span>
                </td>
            </tr>
        }
    </table>
</div>
<!-- ECharts单文件引入 -->
<script src="~/Scripts/Echarts/build/dist/echarts.js"></script>
<script type="text/javascript">
    // 路径配置
    require.config({
        paths: {
            echarts: '../Scripts/Echarts/build/dist'
        }
    });

    // 使用
    require(
        [
            'echarts',
            'echarts/chart/bar', // 使用柱状图就加载bar模块，按需加载
            'echarts/chart/line', //  折线图
            'echarts/chart/bar'//  柱状图

        ],
         function (ec) {
             // 基于准备好的dom，初始化echarts图表
             var myChart1 = ec.init(document.getElementById('chart1'));

             var option1 = {
                 backgroundColor: '#fff',
                 title: {
                     text: '近7天销售额',
                     textStyle: {
                         fontSize: '14',
                         fontWeight: '500',
                         color: '#bfbfbf'
                     }
                 },
                 tooltip: {
                     trigger: 'axis'
                 },
                 calculable: false,
                 grid: {
                     show: true,
                     width: '88%',
                     height: 260,
                     x: 70,
                     y: 50,
                     borderWidth: 1,
                     borderColor: '#efefef',
                     lineStyle: { color: ['#efefef'], }


                 },
                 xAxis: [
                     {
                         type: 'category',
                         data: @Html.Raw(ViewBag.dayTitleList),
                         axisLine: {
                             lineStyle: {
                                 color: '#efefef',
                                 width: 0,
                                 type: 'solid'
                             }
                         },
                         axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                             show: true,
                             textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                                 color: '#b1b1b1'
                             }
                         },
                         splitLine: {           // 分隔线
                             show: true,        // 默认显示，属性show控制显示与否
                             lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                                 color: ['#efefef'],
                                 width: 1,
                                 type: 'solid'
                             }
                         },
                     }
                 ],
                 yAxis: [
                     {
                         type: 'value',
                         show: true,
                         axisLine: {
                             lineStyle: {
                                 color: '#efefef',
                                 width: 0,
                                 type: 'solid'
                             }
                         },
                         axisLabel: {           // 坐标轴文本标签
                             show: true,
                             textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                                 color: '#b1b1b1'
                             }
                         },
                         splitLine: {           // 分隔线
                             show: true,        // 默认显示，属性show控制显示与否
                             lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                                 color: ['#efefef'],
                                 width: 1,
                                 type: 'solid'
                             }
                         },
                     }
                 ],
                 series: [

                     {
                         name: '销售额',
                         type: 'bar',
                         data: @Html.Raw(ViewBag.saleTotalList),
                         splitLine: {
                             lineStyle: {
                                 color: '#ccc',
                                 width: 0,
                                 type: 'solid'
                             }
                         },
                         itemStyle: {
                             normal: {
                                 barBorderRadius: 5,
                                 color: '#6fc6e6'
                             }
                         }
                     }
                 ],
             };

             // 为echarts对象加载数据
             myChart1.setOption(option1);

             //折线图
             var myChart2 = ec.init(document.getElementById('chart2'));

             var option2 = {
                 backgroundColor: '#afd96e',
                 title: {
                     x: 'center',
                     y: 10,
                     text: '近7天客单量',
                     textStyle: {
                         fontSize: '12',
                         fontWeight: '300',
                         color: '#fff'
                     }
                 },
                 tooltip: {
                     trigger: 'axis'
                 },
                 calculable: false,
                 grid: {
                     show: true,
                     width: '85%',
                     height: 90,
                     x: 35,
                     y: 36,
                     borderWidth: 0,
                 },
                 xAxis: [
                     {
                         type: 'category',
                         boundaryGap: false,
                         data: @Html.Raw(ViewBag.dayTitleList),
                         axisLine: {
                             lineStyle: {
                                 color: '#fff',
                                 width: 1,
                                 type: 'solid'
                             }
                         },
                         axisLabel: {           // 坐标轴文本标签
                             textStyle: {       // 其余属性默认使用全局文本样式
                                 color: '#fff'
                             }
                         },
                         splitLine: {           // 分隔线
                             show: true,        // 默认显示，属性show控制显示与否
                             lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                                 color: ['#fff'],
                                 width: 0,
                                 type: 'solid'
                             }
                         },

                     }
                 ],
                 yAxis: [
                     {
                         type: 'value',
                         axisLabel: {
                             formatter: '{value}'
                         },
                         axisLine: {
                             lineStyle: {
                                 color: '#fff',
                                 width: 1,
                                 type: 'solid'
                             }
                         },
                         axisLabel: {           // 坐标轴文本标签
                             textStyle: {       // 其余属性默认使用全局文本样式
                                 color: '#fff'
                             }
                         },
                         splitLine: {           // 分隔线
                             show: true,        // 默认显示，属性show控制显示与否
                             lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                                 color: ['#fff'],
                                 width: 0,
                                 type: 'solid'
                             }
                         },
                     }
                 ],
                 series: [
                     {
                         name: '客单量',
                         type: 'line',
                         data: @Html.Raw(ViewBag.saleOederNumberList),
                         itemStyle: {
                             normal: {
                                 color: '#fff',
                                 lineStyle: { width: 1, }
                             }
                         }
                     },
                 ]
             };

             // 为echarts对象加载数据
             myChart2.setOption(option2);

             //柱状图3
             var hotProductNameListCount = '@hotProductNameListNotJson.Count'
             if(hotProductNameListCount != 0){
                 var myChart3 = ec.init(document.getElementById('chart3'));
                 var option3 = {
                     backgroundColor: '#f3dd79',
                     title: {
                         x: 'center',
                         y: 10,
                         text: '近7天热销商品',
                         textStyle: {
                             fontSize: '12',
                             fontWeight: '300',
                             color: '#fff'
                         }
                     },
                     tooltip: {
                         trigger: 'item'
                     },
                     calculable: false,
                     grid: {
                         show: true,
                         width: '93%',
                         height: 100,
                         x: 15,
                         y: 50,
                         borderWidth: 0,
                     },
                     xAxis: [
                         {
                             type: 'category',
                             show: false,
                             data: @Html.Raw(ViewBag.hotProductNameList)
                             }
                     ],
                     yAxis: [
                         {
                             type: 'value',
                             show: false
                         }
                     ],
                     series: [
                         {
                             name: '销售量',
                             type: 'bar',
                             barWidth: 10,
                             itemStyle: {
                                 normal: {
                                     barBorderRadius: 5,
                                     color: function (params) {
                                         // build a color map as your need.
                                         var colorList = [
                                           '#fff', '#fff', '#fff', '#fff', '#fff',
                                            '#fff', '#fff', '#fff', '#fff', '#fff',
                                            '#fff', '#fff', '#fff', '#fff', '#fff'
                                         ];
                                         return colorList[params.dataIndex]
                                     },
                                     label: {
                                         show: true,
                                         position: 'top',
                                         formatter: '{c}'
                                     }
                                 }
                             },
                             data: @Html.Raw(ViewBag.hotProductSaleNumList),
                             markPoint: {
                                 tooltip: {
                                     trigger: 'item',
                                     backgroundColor: 'rgba(0,0,0,0)',
                                     formatter: function (params) {
                                         return '<img src="'
                                                 + params.data.symbol.replace('image://', '')
                                                 + '"/>';
                                     }
                                 },
                                 data: @Html.Raw(ViewBag.hotProductNameList)
                                 }
                         }
                     ]
                 };

                 // 为echarts对象加载数据
                 myChart3.setOption(option3);
             }
         }

        );




</script>

<script type="text/javascript">
    function toNotice() {
        jump("公告管理", '@Url.Action("NoticeManagement", "Notice")', "2");
    }
    function toOrder() {
        jump("采购订单", '@Url.Action("Index", "Order")', "10")
    }

    function toOrderDetail(id) {
        openDialog("订单详情", "@Url.Action("Detail","Order")?isdetail=1&Id=" + id, $(window.parent).width() - 80, $(window.parent).height() - 80, true);
    }

    function toActivityNoticeDetail(id,type,title){
        if(type == 1){
            activityNoticeToActivity(title,id);
        }else if(type == 2){
            var url = '';
            url = '@Url.Action("Detail", "Notice")' + "?isdetail=1&id=" + id;
            openDialog("公告详情", url, 640, 480, true);
        }
    }


    //活动详情
    function activityNoticeToActivity(title, id) {
        var w = $(window.parent).width() - 80;
        var h = $(window.parent).height() - 80;
        var url = '';
        switch (title) {
            case '单品折扣':
                url = '@Url.Action("Detail", "DanpinZhekou")' + "?isdetail=1&commodityId=" + id;
                break;
            case '捆绑促销':
                url = '@Url.Action("Detail", "KunBangXiaoShou")' + "?isdetail=1&commodityId=" + id;
                break;
            case '组合促销':
                url = '@Url.Action("Detail", "ZuheCuXiao")' + "?isdetail=1&id=" + id;
                break;
            case '买赠促销':
                url = '@Url.Action("Detail", "MaiZengCuXiao")' + "?isdetail=1&id=" + id;
                break;
            case '满元促销':
                url = '@Url.Action("Detail", "ManYuanCuXiao")' + "?isdetail=1&id=" + id;
                break;
        }
        if (url != "") {
            openDialog("活动详情", url, w, h, true);
        }

    }


</script>